.\"                                      Hey, EMACS: -*- nroff -*-
.\" (C) Copyright 2020 Scott Hamilton <sgn.hamilton+debian@protonmail.com>
.\"
.TH FAKEMICWAVPLAYER 1
.SH NAME
FakeMicWavPlayer \- Play audio files to recording apps
.SH SYNOPSIS
.B FakeMicWavPlayer
[\fB\-h|\-\-help]
[\fB\-s|\-\-sink-list]
.IR \fR\fIOGG-FILE
.IR \fR\fISOURCE
.IR \fR\fIPROCESS-BINARY
.SH DESCRIPTION
.B FakeMicWavPlayer
Play the OGG-FILE to the recording PROCESS-BINARY


while keeping the voice stream from the SOURCE recorded.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
display this help and exit
.TP
.BR \-s ", " \-\-sink-list
Plays the OGG-FILE into those sinks while playing 
it to the recording PROCESS-BINARY
.TP
.I OGG-FILE
The audio file in Ogg Vorbis format to play
.TP
.I SOURCE
The the name of the pulseaudio source to record. This option allows to keep recording your voice while playing the audio. To find out the name of your microphone, headset or other audio input devices.


.BR pactl (1)
.TP
.I PROCESS-BINARY
The binary-filename of your recording app. In the case of Audacity, on most linux distributions you will set it to audacity (some exceptions exist like in NixOS where the binary wrapping changes the binary name
.SH EXAMPLES
To see the list of your pulseaudio sources, use
.BR pactl (1)
command:
.PP
.nf
.RS
pactl list short sources
.RE
.fi
.PP
This is the output on a laptop with only an internal microphone: 
.PP
.nf
.RS
0       alsa_output.pci-0000_00_1f.3.analog-stereo.monitor      module-alsa-card.c      s16le 2ch 44100Hz       SUSPENDED


1       alsa_input.pci-0000_00_1f.3.analog-stereo       module-alsa-card.c      s16le 2ch 44100Hz       SUSPENDED
.RE
.fi
.PP
The source names are given by the second column. Those ended by .monitor suffix (sink monitors) aren't relevant and you should ignore them.


The next step is to get the process binary name of the recording app, use again
.BR pactl (1)
command: 
.PP
.nf
.RS
pactl list source-outputs
.RE
.fi
.PP
This is the output with audacity recording: 
.PP
.nf
.RS
Source Output #98
        Driver: protocol-native.c
        Owner Module: 11
        Client: 1064
        Source: 1
        Sample Specification: float32le 2ch 44100Hz
        Channel Map: front-left,front-right
        Format: pcm, format.sample_format = "\\"float32le\\""  format.rate = "44100"  format.channels = "2"  format.channel_map = "\\"front-left,front-right\\""
        Corked: no
        Mute: no
        Volume: front-left: 65536 / 100% / 0.00 dB,   front-right: 65536 / 100% / 0.00 dB
                balance 0.00
        Buffer Latency: 0 usec
        Source Latency: 1954 usec
        Resample method: copy
        Properties:
                media.name = "ALSA Capture"
                application.name = "ALSA plug-in [audacity]"
                native-protocol.peer = "UNIX socket client"
                native-protocol.version = "33"
                application.process.id = "8152"
                application.process.user = "nobodyuser"
                application.process.host = "MY-COMPUTER"
                application.process.binary = "audacity"
                application.language = "fr_FR.UTF-8"
                window.x11.display = ":0"
                application.process.machine_id = "fake machine id"
                application.process.session_id = "fake session id"
                application.icon_name = "audacity"
                module-stream-restore.id = "source-output-by-application-name:ALSA plug-in [audacity]"
.RE
.fi
.PP
The relevant field is 
.BR application.process.binary = "audacity".


Here you can see that the process binary name is "audacity". So the command to play a given ogg file and the previous source seen above to audacity would be: 
.PP
.nf
.RS
FakeMicWavPlayer \fR\fIMusicFile.ogg alsa_input.pci-0000_00_1f.3.analog-stereo audacity
.RE
.fi
.PP
One last useful option is the sink list. Similarly to the source, sink names to be used in the sink list can be fetched with
.BR pactl (1)
using this command:
.PP
.nf
.RS
pactl list short sinks
.RE
.fi
.PP
This is the output on the same laptop with internal speakers and an USB headset plugged-in:
.pp
.nf
.RS
0       alsa_output.pci-0000_00_1f.3.analog-stereo      module-alsa-card.c      s16le 2ch 48000Hz       SUSPENDED
9       alsa_output.usb-Sennheiser_Sennheiser_SC60_for_Lync_55ef416267-00.analog-stereo module-alsa-card.c      s16le 2ch 44100Hz       IDLE
.RE
.fi
.PP
Again, the relevant data is in column 2. This is the names of the sinks.


If we wanted to replay the previous audio file also on those two sinks, while recording on the same microphone to audacity; we would use this command:
.PP
.nf
.RS
FakeMicWavPlayer \fB --sink-list alsa_output.pci-0000_00_1f.3.analog-stereo,alsa_output.usb-Sennheiser_Sennheiser_SC60_for_Lync_55ef416267-00.analog-stereo \fR\fIMusicFile.ogg alsa_input.pci-0000_00_1f.3.analog-stereo audacity
